
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  ldapUid: 'ldapUid',
  email: 'email',
  name: 'name',
  role: 'role',
  departmentId: 'departmentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  parentId: 'parentId',
  managerId: 'managerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  deadline: 'deadline',
  priority: 'priority',
  status: 'status',
  blockerReason: 'blockerReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById',
  departmentId: 'departmentId',
  parentId: 'parentId',
  isCarriedOver: 'isCarriedOver',
  carryOverReason: 'carryOverReason',
  carriedOverFromDeadline: 'carriedOverFromDeadline',
  carriedOverAt: 'carriedOverAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  ldapUid: 'ldapUid',
  email: 'email',
  name: 'name'
};

exports.Prisma.DepartmentOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.TaskOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  blockerReason: 'blockerReason',
  carryOverReason: 'carryOverReason'
};
exports.Role = exports.$Enums.Role = {
  admin: 'admin',
  manager: 'manager',
  employee: 'employee'
};

exports.TaskPriority = exports.$Enums.TaskPriority = {
  high: 'high',
  medium: 'medium',
  low: 'low'
};

exports.TaskStatus = exports.$Enums.TaskStatus = {
  todo: 'todo',
  in_progress: 'in_progress',
  completed: 'completed',
  blocker: 'blocker'
};

exports.Prisma.ModelName = {
  User: 'User',
  Department: 'Department',
  Task: 'Task'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\greenscout\\Desktop\\projects\\tasks-tracker\\server\\src\\generated\\prisma2",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "binary"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\greenscout\\Desktop\\projects\\tasks-tracker\\server\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider   = \"prisma-client-js\"\n  output     = \"../src/generated/prisma2\"\n  engineType = \"binary\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Roles are managed in the application database, not LDAP\nenum Role {\n  admin\n  manager\n  employee\n}\n\nmodel User {\n  id                  Int          @id @default(autoincrement())\n  ldapUid             String       @unique\n  email               String?      @unique\n  name                String\n  role                Role         @default(employee)\n  departmentId        Int?\n  department          Department?  @relation(fields: [departmentId], references: [id])\n  managingDepartments Department[] @relation(\"DepartmentManager\")\n  tasksCreated        Task[]\n  createdAt           DateTime     @default(now())\n  updatedAt           DateTime     @updatedAt\n}\n\nmodel Department {\n  id        Int          @id @default(autoincrement())\n  name      String\n  parentId  Int?\n  parent    Department?  @relation(\"DepartmentHierarchy\", fields: [parentId], references: [id])\n  children  Department[] @relation(\"DepartmentHierarchy\")\n  managerId Int?\n  manager   User?        @relation(\"DepartmentManager\", fields: [managerId], references: [id])\n  users     User[]\n  tasks     Task[]\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n\n  @@unique([name, parentId])\n}\n\nenum TaskPriority {\n  high\n  medium\n  low\n}\n\nenum TaskStatus {\n  todo\n  in_progress\n  completed\n  blocker\n}\n\nmodel Task {\n  id            Int          @id @default(autoincrement())\n  title         String\n  description   String\n  deadline      DateTime\n  priority      TaskPriority\n  status        TaskStatus   @default(todo)\n  blockerReason String?\n  createdAt     DateTime     @default(now())\n  updatedAt     DateTime     @updatedAt\n\n  // Relations\n  createdById  Int\n  createdBy    User        @relation(fields: [createdById], references: [id])\n  departmentId Int?\n  department   Department? @relation(fields: [departmentId], references: [id])\n  parentId     Int?\n  parent       Task?       @relation(\"TaskSubtasks\", fields: [parentId], references: [id])\n  subtasks     Task[]      @relation(\"TaskSubtasks\")\n\n  // Carryover fields\n  isCarriedOver           Boolean   @default(false)\n  carryOverReason         String?\n  carriedOverFromDeadline DateTime?\n  carriedOverAt           DateTime?\n}\n",
  "inlineSchemaHash": "ae78dc831d8f7d485bdbb55ad8e46dfe5bf0eba6da12181a26bbc3cb2309b3d2",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ldapUid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"departmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"department\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentToUser\"},{\"name\":\"managingDepartments\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentManager\"},{\"name\":\"tasksCreated\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"TaskToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Department\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentHierarchy\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentHierarchy\"},{\"name\":\"managerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"manager\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DepartmentManager\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DepartmentToUser\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"DepartmentToTask\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Task\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"TaskPriority\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"TaskStatus\"},{\"name\":\"blockerReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TaskToUser\"},{\"name\":\"departmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"department\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentToTask\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"TaskSubtasks\"},{\"name\":\"subtasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"TaskSubtasks\"},{\"name\":\"isCarriedOver\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"carryOverReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carriedOverFromDeadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"carriedOverAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

